` -> UNKNOWN
` -> UNKNOWN
` -> UNKNOWN
c -> IDENTIFIER
# -> UNKNOWN
include -> IDENTIFIER
< -> OPERATOR
stdio -> IDENTIFIER
. -> UNKNOWN
h -> IDENTIFIER
> -> OPERATOR
int -> KEYWORD
main -> IDENTIFIER
( -> SPECIAL SYMBOL
) -> SPECIAL SYMBOL
{ -> SPECIAL SYMBOL
int -> KEYWORD
a -> IDENTIFIER
= -> OPERATOR
5 -> NUMBER
, -> UNKNOWN
b -> IDENTIFIER
= -> OPERATOR
10 -> NUMBER
, -> UNKNOWN
c -> IDENTIFIER
; -> SPECIAL SYMBOL
c -> IDENTIFIER
= -> OPERATOR
a -> IDENTIFIER
* -> OPERATOR
b -> IDENTIFIER
+ -> OPERATOR
20 -> NUMBER
; -> SPECIAL SYMBOL
if -> KEYWORD
( -> SPECIAL SYMBOL
c -> IDENTIFIER
% -> OPERATOR
2 -> NUMBER
= -> OPERATOR
= -> OPERATOR
0 -> NUMBER
) -> SPECIAL SYMBOL
{ -> SPECIAL SYMBOL
printf -> FUNCTION
( -> SPECIAL SYMBOL
" -> UNKNOWN
Result -> IDENTIFIER
is -> IDENTIFIER
even -> IDENTIFIER
: -> UNKNOWN
% -> OPERATOR
d -> IDENTIFIER
\ -> UNKNOWN
n -> IDENTIFIER
" -> UNKNOWN
, -> UNKNOWN
c -> IDENTIFIER
) -> SPECIAL SYMBOL
; -> SPECIAL SYMBOL
} -> SPECIAL SYMBOL
else -> KEYWORD
{ -> SPECIAL SYMBOL
printf -> FUNCTION
( -> SPECIAL SYMBOL
" -> UNKNOWN
Result -> IDENTIFIER
is -> IDENTIFIER
odd -> IDENTIFIER
: -> UNKNOWN
% -> OPERATOR
d -> IDENTIFIER
\ -> UNKNOWN
n -> IDENTIFIER
" -> UNKNOWN
, -> UNKNOWN
c -> IDENTIFIER
) -> SPECIAL SYMBOL
; -> SPECIAL SYMBOL
} -> SPECIAL SYMBOL
for -> KEYWORD
( -> SPECIAL SYMBOL
int -> KEYWORD
i -> IDENTIFIER
= -> OPERATOR
0 -> NUMBER
; -> SPECIAL SYMBOL
i -> IDENTIFIER
< -> OPERATOR
5 -> NUMBER
; -> SPECIAL SYMBOL
i -> IDENTIFIER
+ -> OPERATOR
+ -> OPERATOR
) -> SPECIAL SYMBOL
{ -> SPECIAL SYMBOL
printf -> FUNCTION
( -> SPECIAL SYMBOL
" -> UNKNOWN
Loop -> IDENTIFIER
iteration -> IDENTIFIER
: -> UNKNOWN
% -> OPERATOR
d -> IDENTIFIER
\ -> UNKNOWN
n -> IDENTIFIER
" -> UNKNOWN
, -> UNKNOWN
i -> IDENTIFIER
) -> SPECIAL SYMBOL
; -> SPECIAL SYMBOL
} -> SPECIAL SYMBOL
return -> KEYWORD
0 -> NUMBER
; -> SPECIAL SYMBOL
} -> SPECIAL SYMBOL
` -> UNKNOWN
` -> UNKNOWN
` -> UNKNOWN
