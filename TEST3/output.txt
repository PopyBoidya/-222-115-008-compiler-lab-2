# -> UNKNOWN
i -> UNKNOWN
n -> UNKNOWN
c -> UNKNOWN
l -> UNKNOWN
u -> UNKNOWN
d -> UNKNOWN
e -> UNKNOWN
< -> LESS THAN
s -> UNKNOWN
t -> UNKNOWN
d -> UNKNOWN
i -> UNKNOWN
o -> UNKNOWN
. -> UNKNOWN
h -> UNKNOWN
> -> GREATER THAN
int -> KEYWORD
m -> UNKNOWN
a -> UNKNOWN
i -> UNKNOWN
n -> UNKNOWN
( -> LEFT PARENTHESIS
) -> RIGHT PARENTHESIS
{ -> LEFT BRACE
int -> KEYWORD
n -> UNKNOWN
u -> UNKNOWN
m -> UNKNOWN
, -> COMMA
s -> UNKNOWN
u -> UNKNOWN
m -> UNKNOWN
= -> ASSIGNMENT OPERATOR
0 -> NUMBER
; -> SEMICOLON
printf -> FUNCTION
( -> LEFT PARENTHESIS
" -> UNKNOWN
E -> UNKNOWN
n -> UNKNOWN
t -> UNKNOWN
e -> UNKNOWN
r -> UNKNOWN
a -> UNKNOWN
n -> UNKNOWN
u -> UNKNOWN
m -> UNKNOWN
b -> UNKNOWN
e -> UNKNOWN
r -> UNKNOWN
: -> UNKNOWN
" -> UNKNOWN
) -> RIGHT PARENTHESIS
; -> SEMICOLON
scanf -> FUNCTION
( -> LEFT PARENTHESIS
" -> UNKNOWN
% -> UNKNOWN
d -> UNKNOWN
" -> UNKNOWN
, -> COMMA
& -> UNKNOWN
n -> UNKNOWN
u -> UNKNOWN
m -> UNKNOWN
) -> RIGHT PARENTHESIS
; -> SEMICOLON
for -> KEYWORD
( -> LEFT PARENTHESIS
int -> KEYWORD
i -> UNKNOWN
= -> ASSIGNMENT OPERATOR
1 -> NUMBER
; -> SEMICOLON
i -> UNKNOWN
<= -> LESS THAN OR EQUAL
n -> UNKNOWN
u -> UNKNOWN
m -> UNKNOWN
; -> SEMICOLON
i -> UNKNOWN
+ -> ADD OPERATOR
+ -> ADD OPERATOR
) -> RIGHT PARENTHESIS
{ -> LEFT BRACE
s -> UNKNOWN
u -> UNKNOWN
m -> UNKNOWN
+ -> ADD OPERATOR
= -> ASSIGNMENT OPERATOR
i -> UNKNOWN
; -> SEMICOLON
} -> RIGHT BRACE
printf -> FUNCTION
( -> LEFT PARENTHESIS
" -> UNKNOWN
S -> UNKNOWN
u -> UNKNOWN
m -> UNKNOWN
o -> UNKNOWN
f -> UNKNOWN
n -> UNKNOWN
u -> UNKNOWN
m -> UNKNOWN
b -> UNKNOWN
e -> UNKNOWN
r -> UNKNOWN
s -> UNKNOWN
f -> UNKNOWN
r -> UNKNOWN
o -> UNKNOWN
m -> UNKNOWN
1 -> NUMBER
t -> UNKNOWN
o -> UNKNOWN
% -> UNKNOWN
d -> UNKNOWN
i -> UNKNOWN
s -> UNKNOWN
% -> UNKNOWN
d -> UNKNOWN
\ -> UNKNOWN
n -> UNKNOWN
" -> UNKNOWN
, -> COMMA
n -> UNKNOWN
u -> UNKNOWN
m -> UNKNOWN
, -> COMMA
s -> UNKNOWN
u -> UNKNOWN
m -> UNKNOWN
) -> RIGHT PARENTHESIS
; -> SEMICOLON
return -> KEYWORD
0 -> NUMBER
; -> SEMICOLON
} -> RIGHT BRACE
