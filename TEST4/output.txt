# -> UNKNOWN
include -> IDENTIFIER
< -> LESS THAN
stdio -> IDENTIFIER
. -> UNKNOWN
h -> IDENTIFIER
> -> GREATER THAN
int -> KEYWORD
main -> IDENTIFIER
( -> LEFT PARENTHESIS
) -> RIGHT PARENTHESIS
{ -> LEFT BRACE
int -> KEYWORD
n -> IDENTIFIER
, -> COMMA
factorial -> IDENTIFIER
= -> ASSIGNMENT OPERATOR
1 -> NUMBER
; -> SEMICOLON
printf -> FUNCTION
( -> LEFT PARENTHESIS
" -> UNKNOWN
Enter -> IDENTIFIER
a -> IDENTIFIER
positive -> IDENTIFIER
integer -> IDENTIFIER
: -> UNKNOWN
" -> UNKNOWN
) -> RIGHT PARENTHESIS
; -> SEMICOLON
scanf -> FUNCTION
( -> LEFT PARENTHESIS
" -> UNKNOWN
% -> UNKNOWN
d -> IDENTIFIER
" -> UNKNOWN
, -> COMMA
& -> UNKNOWN
n -> IDENTIFIER
) -> RIGHT PARENTHESIS
; -> SEMICOLON
if -> KEYWORD
( -> LEFT PARENTHESIS
n -> IDENTIFIER
< -> LESS THAN
0 -> NUMBER
) -> RIGHT PARENTHESIS
{ -> LEFT BRACE
printf -> FUNCTION
( -> LEFT PARENTHESIS
" -> UNKNOWN
Factorial -> IDENTIFIER
of -> IDENTIFIER
a -> IDENTIFIER
negative -> IDENTIFIER
number -> IDENTIFIER
doesn -> IDENTIFIER
' -> UNKNOWN
t -> IDENTIFIER
exist -> IDENTIFIER
. -> UNKNOWN
\ -> UNKNOWN
n -> IDENTIFIER
" -> UNKNOWN
) -> RIGHT PARENTHESIS
; -> SEMICOLON
} -> RIGHT BRACE
else -> KEYWORD
{ -> LEFT BRACE
for -> KEYWORD
( -> LEFT PARENTHESIS
int -> KEYWORD
i -> IDENTIFIER
= -> ASSIGNMENT OPERATOR
1 -> NUMBER
; -> SEMICOLON
i -> IDENTIFIER
<= -> LESS THAN OR EQUAL
n -> IDENTIFIER
; -> SEMICOLON
i -> IDENTIFIER
+ -> ADD OPERATOR
+ -> ADD OPERATOR
) -> RIGHT PARENTHESIS
{ -> LEFT BRACE
factorial -> IDENTIFIER
* -> MULTIPLY OPERATOR
= -> ASSIGNMENT OPERATOR
i -> IDENTIFIER
; -> SEMICOLON
} -> RIGHT BRACE
printf -> FUNCTION
( -> LEFT PARENTHESIS
" -> UNKNOWN
Factorial -> IDENTIFIER
of -> IDENTIFIER
% -> UNKNOWN
d -> IDENTIFIER
is -> IDENTIFIER
% -> UNKNOWN
d -> IDENTIFIER
\ -> UNKNOWN
n -> IDENTIFIER
" -> UNKNOWN
, -> COMMA
n -> IDENTIFIER
, -> COMMA
factorial -> IDENTIFIER
) -> RIGHT PARENTHESIS
; -> SEMICOLON
} -> RIGHT BRACE
return -> KEYWORD
0 -> NUMBER
; -> SEMICOLON
} -> RIGHT BRACE
